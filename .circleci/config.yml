version: 2.1

parameters:
  primary-python-version:
    type: string
    default: "3.10.7"

commands:
  setup_pip:
    description: "Set Up Dependencies"
    parameters:
      python-version:
        type: string
      install-docs:
        description: Install docs dependencies
        type: boolean
        default: false
    steps:
      - checkout
      - restore_cache:
          keys:
            - processing-{{ arch }}-<< parameters.python-version >>-v3-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}-{{ checksum "requirements-docs.txt" }}
            - processing-{{ arch }}-<< parameters.python-version >>-v3-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}-
            - processing-{{ arch }}-<< parameters.python-version >>-v3-{{ checksum "requirements.txt" }}-
            - processing-{{ arch }}-<< parameters.python-version >>-v3-

      # Bundle install dependencies
      - run:
          name: Install Dependencies
          command: |
            python -m venv ~/venv
            . ~/venv/bin/activate
            pip install --upgrade pip
            pip install wheel
            pip install .
            pip install -r requirements-dev.txt

      # Docs dependencies are only compatible on Python 3.10+, so only install
      # them on demand.
      - when:
          condition: << parameters.install-docs >>
          steps:
            - run:
                command: |
                  . ~/venv/bin/activate
                  pip install -r requirements-docs.txt

      # Store bundle cache
      - save_cache:
          key: processing-{{ arch }}-<< parameters.python-version >>-v3-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}-{{ checksum "requirements-docs.txt" }}
          paths:
            - venv

jobs:
  test:
    parameters:
      python-version:
        type: string
    working_directory: ~/web-monitoring-processing
    docker:
      - image: cimg/python:<< parameters.python-version >>
    steps:
      - checkout
      - setup_pip:
          python-version: << parameters.python-version >>
      - run:
          name: Tests
          command: |
            . ~/venv/bin/activate
            coverage run run_tests.py -v web_monitoring/tests/
      - run:
          name: Coverage
          command: |
            . ~/venv/bin/activate
            coverage report -m

  lint:
    working_directory: ~/web-monitoring-processing
    docker:
      - image: cimg/python:<< pipeline.parameters.primary-python-version >>
    steps:
      - checkout
      - setup_pip:
          python-version: << pipeline.parameters.primary-python-version >>
      - run:
          name: Code linting
          command: |
            . ~/venv/bin/activate
            pyflakes web_monitoring

  docs:
    working_directory: ~/web-monitoring-processing
    docker:
      - image: cimg/python:<< pipeline.parameters.primary-python-version >>
    steps:
      - checkout
      - setup_pip:
          python-version: << pipeline.parameters.primary-python-version >>
          install-docs: true
      - run:
          name: Build docs
          command: |
            . ~/venv/bin/activate
            cd docs && make html

  build_docker:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - checkout
      - run: |
          docker build --target release --tag envirodgi/processing:$CIRCLE_SHA1 .
      - run:
          name: Save Image
          command: |
            mkdir /tmp/workspace
            docker save --output /tmp/workspace/docker-image envirodgi/processing:$CIRCLE_SHA1
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - docker-image

  publish_docker:
    machine:
      image: ubuntu-2004:202111-02
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load Built Docker Image
          command: docker load --input /tmp/workspace/docker-image
      - run:
          name: Re-tag Image
          command: docker image tag envirodgi/processing:$CIRCLE_SHA1 envirodgi/processing:latest
      - run:
          name: Publish to Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push envirodgi/processing:$CIRCLE_SHA1
            docker push envirodgi/processing:latest

workflows:
  build:
    jobs:
      - test:
          matrix:
            parameters:
              python-version: ["3.10"]
      - lint
      - docs
      - build_docker
      - publish_docker:
          requires:
            - test
            - lint
            - build_docker
          filters:
            branches:
              only:
                - release
